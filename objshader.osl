//combine all shaders for calendar

float noiseMetal (point PP)
{
    float out = 0;
    float freq = 1;
    for(int i=0;i<8;++i)
	{
	    out+=abs((float)noise("uperlin",PP[0]*freq)/freq);
	    freq*=2.1;
	}
return out;
}

//dates shader
color dates (point shaderP)
{
	return (color)texture("metal.tx",shaderP[0]/6+0.5,shaderP[1]/6+0.5);
}


color faceMix(color c1, color c2)
{
	//normal NN=transform("referenceFrame",N);
	if(c2[0] < 0.7)
	//< 0.2
		return c2;
	else
		return mix(c1, c2, noise("perlin", P)*0.2);
}

float metalDisp (point shaderP)
{
	//if (resultF)
	//	disp = -0.2;
	return (float)texture("metalDispT.tx",shaderP[0]/7.4+0.5,shaderP[1]/7.4+0.5) * 0.2;
}


shader objshader(
	output float disp=0,
	output color forScrew=0,
	output color Cout=0
)
{
	disp=metalDisp(transform("object",P));
	//prevent from applying dates texture to the screw and torus
	forScrew=noiseMetal(transform("referenceFrame",P));
	//Cout=noiseMetal(transform("referenceFrame",P));
	Cout=forScrew;
	if(N[2]<0)
		Cout = faceMix(Cout,dates(transform("object",P)));
}
